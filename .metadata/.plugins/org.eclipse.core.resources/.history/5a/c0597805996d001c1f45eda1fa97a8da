package pl.pbarczewski.entity;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;


// Główna encja aplikacji reprezentująca kredyt
// Zawiera pola "id" (będący kluczem głównym), oraz "name"
// a także pola "customer" i "product" będące kluczami obcymi z którymi realizowana jest
// jednokierunkowa relacja 'jeden do jednego'
// Zawiera metodę "completeCredit", oraz gettery i settery dla poszczególnych pól
@Entity
@Table(name="Credit", schema="CreditDB")
public class Credit implements EntityInterface {
	
	@Id
	private Integer id;
	@NotNull
	@Pattern(regexp="^[A-Z]([a-zA-Z0-9]+_?\\s?)*[a-zA-Z0-9]+$")
	private String name;
	@OneToOne
	private Customer customer;
	@OneToOne
	private Product product;
	
	public Credit() {
	}
	
	public Credit(@NotNull @Pattern(regexp = "^[A-Z]([a-zA-Z0-9]+_?\\s?)*[a-zA-Z0-9]+$") String name) {
		this.name = name;
	}
	
	
	// Metoda służąca do skompletowania kredytu i wypełniania pól "customer" i "product"
	// Przyjmuje dwa argumenty, obiekt klasy "Customer" i obiekt klasy "Product"
	// Metoda sprawdza czy podane argumenty nie są wartościami "null",
	// oraz czy wartość "creditId" przekazanych obiektów jest taka sama jak "id" obiektu kredyt
	// Rzuca wyjątek IllegalArgumentException, oraz Exception
	// Niczego nie zwraca
	public void completeCredit(Customer customer, Product product) throws Exception {
		if(customer == null || product == null) {
			throw new IllegalArgumentException("Customer or/and product is null");
		}
		if(customer.getCreditId() != this.id || product.getCreditId() != this.id) {
			throw new Exception("Id is different");
		}
		this.customer = customer;
		this.product = product;
	}
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override
	public void setCreditId(int id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}
}
